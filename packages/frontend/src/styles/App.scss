// * the scss-variable modification should occur before importing 'bootstrap'
@import "./variables";
@import "bootstrap/scss/bootstrap";

:root {
    --bs-navbar-brand-color: "white";
    // --bs-primary-bg-subtle: #f5f3f0;
}

p {
    // word-wrap: break-word !important;
    // word-break: break-word !important;
    word-wrap: break-word;
    word-break: break-word;
}

// .answer-bg-correct {
//     background-color: #2468a8;
// }

// .answer-bg-wrong {
//     background-color: #ddaa33;
// }

// .answer-correct {
//     color: #004488;
// }

// .answer-wrong {
//     color: #ddaa33;
// }

blockquote {
    margin: 0;
    padding: 0 1em;
    color: rgb(59, 64, 69);
    border-left: 0.25em solid #c8ccd0;
}

.card-footer {
    background-color: #f2f0e8;
}

.accordion-active-bg-color {
    background-color: var(--bs-accordion-active-bg);
}

.accordion-button {
    padding: 1.5rem;
}
.accordion-button:not(.collapsed) {
    border-bottom: 2px solid lightgrey;
}

.custom-line-clamp {
    // background-color: red;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;

    p {
        margin-bottom: 0;
    }
}

/* ############### Begin cutoff-text ############### */
.cutoff-text {
    // the variables are set from inside the react component
    // height: calc(var(--max-lines) * 1em * var(--line-height));
    max-height: var(--cutoff-container-height);
    // height: var(--cutoff-container-height);
    line-height: var(--line-height);
    overflow: hidden;
    position: relative;
}
.cutoff-text::before {
    content: "";
    position: absolute;
    bottom: 0;
    height: calc(1em * var(--line-height));
    width: 100%;
    pointer-events: none;
    background: linear-gradient(to bottom, transparent, white);
}
.content-space-resetter p {
    margin-bottom: 0;
}
.cutoff-text p {
    margin-bottom: 0;
}
/* ############### End cutoff-text ############### */

.accordion-item:first-of-type > div > .accordion-header .accordion-button {
    border-top-left-radius: var(--bs-accordion-inner-border-radius);
    border-top-right-radius: var(--bs-accordion-inner-border-radius);
}

.accordion-item:last-of-type > div > .accordion-header .accordion-button.collapsed {
    border-bottom-right-radius: var(--bs-accordion-inner-border-radius);
    border-bottom-left-radius: var(--bs-accordion-inner-border-radius);
}

/* .accordion-header-border-radius {
    border-top-left-radius: var(--bs-accordion-inner-border-radius);
    border-top-right-radius: var(--bs-accordion-inner-border-radius);
} */

/* .bg-content-container {
    background-color: #f5f5f5;
} */

// body {
// background-color: #f5f5f5;
// }

@media (max-width: 576px) {
    :root {
        .row {
            padding-right: 0;
            padding-left: 0;
        }
        .row > * {
            padding-right: 0;
            padding-left: 0;
        }
        .container {
            padding-right: 4px;
            padding-left: 4px;
        }
    }
}

.form-check-input {
    border: 2px solid grey !important; /* Change the border color */
}

/* Add a border to the radio button when checked */
.form-check-input:checked {
    border: 1px solid var(--bs-primary-rgb) !important; /* Change the border color */
}

$layout-breakpoint-small: 650px;

.modal-80w {
    @media (min-width: $layout-breakpoint-small) {
        width: 80vw !important;
        // max-width: 80vw !important;
        max-width: 1200px !important;
    }
}

.background-grey {
    background-color: #f5f5f5;
}

.text-overflow-ellipsis {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.user-admin-card-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(20rem, 100%), 1fr));
    row-gap: 2.5rem;
    column-gap: 1rem;
}
